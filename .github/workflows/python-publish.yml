name: Publish Python Package

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  create-docs:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pydoctor
          
          curl -f -o gen-docs.py https://raw.githubusercontent.com/luxonis/python-api-analyzer-to-json/main/gen-docs.py
          curl https://rclone.org/install.sh | sudo bash
  
          mkdir -p ~/.config/rclone || true
          echo "[cfr2]" > ~/.config/rclone/rclone.conf
          echo "type = s3" >> ~/.config/rclone/rclone.conf
          echo "provider = Cloudflare" >> ~/.config/rclone/rclone.conf
          echo "access_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}" >> ~/.config/rclone/rclone.conf
          echo "secret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}" >> ~/.config/rclone/rclone.conf
          echo "endpoint = https://780448894f6a1605bf84886104d96c1f.r2.cloudflarestorage.com" >> ~/.config/rclone/rclone.conf
          echo "acl = private" >> ~/.config/rclone/rclone.conf

      - name: Generate docs
        run: |
          python gen-docs.py ./src/robothub
          mv docs.json schema.json

      - name: Upload docs
        run: |
          rclone copy "schema.json" "cfr2:docs-assets/libraries/python/robothub/${{ github.ref_name }}/"

  publish-package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
